<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类：octopress | 松鼠窝]]></title>
  <link href="http://pangyi.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://pangyi.github.io/"/>
  <updated>2015-02-23T16:06:37+08:00</updated>
  <id>http://pangyi.github.io/</id>
  <author>
    <name><![CDATA[PangYi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用友言做octopress的评论系统，使用加网做分享]]></title>
    <link href="http://pangyi.github.io/blog/20150125/shi-yong-you-yan-zuo-octopressde-ping-lun-xi-tong-,shi-yong-jia-wang-zuo-fen-xiang/"/>
    <updated>2015-01-25T17:31:02+08:00</updated>
    <id>http://pangyi.github.io/blog/20150125/shi-yong-you-yan-zuo-octopressde-ping-lun-xi-tong-,shi-yong-jia-wang-zuo-fen-xiang</id>
    <content type="html"><![CDATA[<p>友言、加网是一家子。正好各做各用，用友言替代disqus评论系统，用加网做分享到微X的功能。</p>

<!-- more -->

<h2 id="section">注册和获取代码</h2>

<p>友言、加网是一家子，只要注册加网就行了。登录后，在JiaThis中有代码一项进入并进行定制，然后获取代码，在友言中有获取代码，在此获取代码。</p>

<h2 id="section-1">新建显示评论和分享的页面文件</h2>

<p>新建source/_includes/post/share_comment.html，将获取的代码复制到此处。</p>

<p>如果想把如分享按钮显示在侧栏，则需要参考对侧栏的定制，将加网的代码放进去。</p>

<h2 id="section-2">配置显示开头</h2>

<p>在_config.yml中添加开关：</p>

<p>&#8220;`yml</p>

<h1 id="jiathis">jiathis</h1>
<p>comment_share: true</p>

<p>&#8220;`</p>

<p>source/_includes/post/sharing.html中添加如下代码（请自觉将\去掉）：</p>

<p><code>
&lt;!-- JiaThis Button --&gt;
  \{\% if site.comment_share %}
    \{\% include post/share_comment.html %}
  \{\% endif %}
</code></p>

<h2 id="section-3">友言网的验证</h2>

<p>友言网验证后才能进行设置。登录友言网后，会看到列出了使用友言代码的网站。在“状态”处可以看到验证状态。在操作中点“验证”，在“请选择验证方法”处选择“上传html文件”，之后点“下载验证文件”，获得验证文件。验证文件是个空文件。将它放到source目录下，做rake deploy操作，就可以自动验证了。</p>

<p>验证后可以对评论的显示进行设置调整。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在octopress中增加“返回顶部”按钮]]></title>
    <link href="http://pangyi.github.io/blog/20150125/zai-octopresszhong-zeng-jia-fan-hui-ding-bu-an-niu/"/>
    <updated>2015-01-25T17:07:51+08:00</updated>
    <id>http://pangyi.github.io/blog/20150125/zai-octopresszhong-zeng-jia-fan-hui-ding-bu-an-niu</id>
    <content type="html"><![CDATA[<p>通过“返回顶部”按钮，可以快速返回页首。配置按照<a href="http://812lcl.com/blog/2013/10/27/octopresszhu-ti-yang-shi-xiu-gai/">Octopress主题样式修改</a>一文。但照着做下来并不能实现配置。因此到疑似作者812lcl的github仓库中找了最新版本的配置。</p>

<!-- more -->

<h2 id="javascripts">javascripts脚本</h2>

<p>新建一个文件source/javascripts/top.js。它的最新版本在：</p>

<p>https://github.com/812lcl/812lcl.github.com/blob/source/source/javascripts/top.js</p>

<h2 id="section">显示按钮</h2>

<p>显示按钮需要新建source/_includes/custom/totop.html。它的最近版本在：
https://github.com/812lcl/812lcl.github.com/blob/source/source/_includes/custom/totop.html</p>

<p>这里指定了调用的javscripts的文件名，按钮图片的文件名等，如right:180px指定了按钮距离页面右侧的举例，可以通过调整它来调整显示效果。</p>

<h2 id="section-1">按钮图片</h2>

<p>从上面可以看出按钮文件应在source/images中。保存一个top.png图片到这里，就可以显示按钮了。</p>

<p>一开始把图片放到了images中，而不是source/images中，造成只显示了“返回顶部”。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[让octopress支持标签（tag）]]></title>
    <link href="http://pangyi.github.io/blog/20150125/rang-octopresszhi-chi-biao-qian-(tag)/"/>
    <updated>2015-01-25T16:30:25+08:00</updated>
    <id>http://pangyi.github.io/blog/20150125/rang-octopresszhi-chi-biao-qian-(tag)</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section">安装插件</a>    <ul>
      <li><a href="#octopress-tag-cloud">octopress-tag-cloud</a></li>
    </ul>
  </li>
  <li><a href="#section-1">在侧边栏显示标签云</a></li>
  <li><a href="#section-2">使用</a></li>
  <li><a href="#section-3">参考</a></li>
</ul>

<h2 id="section">安装插件</h2>

<p>目前有多个插件实现标签功能。其中一个是octopress<a href="https://github.com/tokkonopapa/octopress-tagcloud">官方推荐版本</a>，据说不支持多标签。还有些人用的是“3D”标签云，风格上我不是太喜欢。最终选用的是robbyedwards的一组插件。这组插件有两个，一个是<a href="https://github.com/robbyedwards/octopress-tag-pages">octopress-tag-pages</a>，用于生成标签页面，另一个是<a href="https://github.com/robbyedwards/octopress-tag-cloud">octopress-tag-cloud</a>，用于显示实现标签云功能。</p>

<!-- more -->
<p>### octopress-tag-pages</p>

<p>首先安装octopress-tag-page。从上面链接处得到插件，复制这些文件到octopress的相同路径：</p>

<p>plugins/tag_generator.rb</p>

<p>source/_includes/custom/tag_feed.xml</p>

<p>source/_includes/post/tags.html</p>

<p>source/_layouts/tag_index.html</p>

<p>其中tag_generator.rb和tag_feed.xml是必须的，其它据网上的一些人说是可选的。</p>

<p>另外一些文件是同名文件，如果复制过来一方面会影响已经配置的功能，另外可能导致发生一些问题（可能是版本兼容的问题造成的）。</p>

<p>这个插件不需要做配置。</p>

<h3 id="octopress-tag-cloud">octopress-tag-cloud</h3>

<p>然后安装octopress-tag-cloud。在上面链接处得到插件，同样复制一些文件到octopress的相同路径：</p>

<p>plugins/tag_cloud.rb</p>

<p>source/_includes/custom/asides/tags.html</p>

<p>tag_cloud.rb为必须。tags.html为在侧边栏显示标签的示例。可以参照它进行配置。</p>

<h2 id="section-1">在侧边栏显示标签云</h2>

<p>在_config.yml中的default_asides:中增加custom/asides/tags.html，用于在侧边栏显示标签云。如果想汉化，则修改tags.html等文件即可。</p>

<h2 id="section-2">使用</h2>

<p>在新建的博客文件中加入一行“tags: ”，类似：</p>

<pre><code>---
layout: post
title: "test tag"
published: true
date: 2014-10-28 00:42
comments: true
tags: [扩展, ttt]
categories: 
---
</code></pre>

<p>这样会给这一博文增加两个标签，使标签与分类对文章进行不同维度的分类。</p>

<p>当有文章有多个标签时，在执行rake generate时会出现类似如下问题：</p>

<p>&#8220;`
$ rake generate
(in /ubdata/octopress)
## Generating Site with Jekyll
identical source/stylesheets/screen.css 
Configuration file: /ubdata/octopress/_config.yml
            Source: source
       Destination: public
      Generating… 
  Liquid Exception: comparison of Array with Array failed in _layouts/page.html
jekyll 2.4.0 | Error:  comparison of Array with Array failed</p>

<p>&#8220;`</p>

<p>经十几天的反复测试，发现在source/_includes/custom/asides/tags.html如果加了“limit”参数，就会出现问题。去掉就好了。</p>

<p>另一个问题是2.0版本的ocroptrss调用的generate操作会执行plugings中的所有插件，所以会报一些错，忽略即可。</p>

<p><code>
$ rake generate
(in /ubdata/octopress)
## Generating Site with Jekyll
identical source/stylesheets/screen.css 
Configuration file: /ubdata/octopress/_config.yml
            Source: source
       Destination: public
      Generating... 
     Build Warning: Layout 'nil' requested in tags/kuo-zhan/atom.xml does not exist.
     Build Warning: Layout 'nil' requested in tags/ttt/atom.xml does not exist.
     Build Warning: Layout 'nil' requested in tags/kuo-zhan/atom.xml does not exist.
     Build Warning: Layout 'nil' requested in tags/ttt/atom.xml does not exist.
                    done.
 Auto-regeneration: disabled. Use --watch to enable.
</code></p>

<h2 id="section-3">参考</h2>

<p>http://codemacro.com/2012/07/18/add-tag-to-octopress/</p>

<p>http://loudou.info/blog/2014/02/15/wei-octopress-tian-jia-tag-gong-neng/</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为octopress文章加入原文链接]]></title>
    <link href="http://pangyi.github.io/blog/20150125/wei-octopresswen-zhang-jia-ru-yuan-wen-lian-jie/"/>
    <updated>2015-01-25T16:11:17+08:00</updated>
    <id>http://pangyi.github.io/blog/20150125/wei-octopresswen-zhang-jia-ru-yuan-wen-lian-jie</id>
    <content type="html"><![CDATA[<p>给博文加入原文链接的作用不消多说。由于在网上找的到诸篇文章或年久有变，或有重要的错误，因此自己总结记录一下，以作备忘。</p>

<!-- more -->

<ul id="markdown-toc">
  <li><a href="#postfooterfilterrb">增加post_footer_filter.rb插件</a></li>
  <li><a href="#section">对显示信息的定制</a></li>
  <li><a href="#section-1">将链接信息与文章内容区分出来</a></li>
  <li><a href="#section-2">相关文章</a></li>
</ul>

<h2 id="postfooterfilterrb">增加post_footer_filter.rb插件</h2>

<p>此部分网上有多个内容相同的博文，但按其中内容增加插件后，在执行rake generate时会出现类似post_filters插件不存在之类的错误。</p>

<p>检查了一下，2.0版本的octopress中没有post_filters.rb这个插件，因此需要对插件进行修改。最终在疑似插件首发引用者的github中找到了一个更新的插件，内容如下：</p>

<p>&#8220;`ruby</p>

<p>#
# post_footer_filter.rb
# Append every post some footer infomation like original url
# Kevin Lynx
# 09.01.2014
#
require ‘octopress-hooks’
module AppendFooterFilter
def self.append(post)
author = post.site.config[‘author’]
url = post.site.config[‘url’]
pre = post.site.config[‘original_url_pre’]
post.content + %Q[&lt;p class=&#8217;post-footer&#8217;&gt;
#{pre or “original link:”}
<a href="#{post.full_url}">#{post.full_url}</a><br />
written by <a href="#{url}">#{author}</a>
 posted at <a href="#{url}">#{url}</a>
&lt;/p&gt;]
end
class PostFilters &lt; Octopress::Hooks::Post
def pre_render(post)
post.content = AppendFooterFilter::append(post)
end</p>

<p>&#8220;`</p>

<p>复制时没有加缩进，想看原版可以到此处：https://github.com/kevinlynx/codemacro-source/blob/master/plugins/post_footer_filter.rb</p>

<p>此后在文章结尾处就有了原文链接信息了</p>

<h2 id="section">对显示信息的定制</h2>

<p>从插件内容中可以看出，默认显示在链接之前的“original link:”可以通过original_url_pre参数指定。只需要在_config.yml中加入</p>

<pre><code>original_url_pre: "显示信息"
</code></pre>

<p>从插件内容中可以看出，其它各项取自_config.yml已有的变量，因此可以通过自己定义变量或直接修改插件内容来改变显示信息。</p>

<p><em>注意：</em> 在<a href="http://codemacro.com/2012/07/26/post-footer-plugin-for-octopress/">为octopress每篇文章添加一个文章信息</a>一文中，误把original_url_pre写成了origional_url_pre，导致无法正确显示。</p>

<h2 id="section-1">将链接信息与文章内容区分出来</h2>

<p>默认状态下，加入的链接信息与文章内容在显示上无法区分。可以在sass/custom/_styles.scss中加入一行：</p>

<p>&#8220;`scss</p>

<p>.post-footer{margin-top:10px;padding:5px;background:none repeat scroll 0pt 0pt #eee;font-size:90%;color:gray}</p>

<p>&#8220;`</p>

<p><em>注意</em> 网上不止一处把文件名写成了_style.scss。很无语。</p>

<h2 id="section-2">相关文章</h2>

<p><a href="http://codemacro.com/2012/07/26/post-footer-plugin-for-octopress/">为octopress每篇文章添加一个文章信息</a>，其它文章都引用了它。</p>

<p>两个犯了同样错误的文章：</p>

<p>http://biaobiaoqi.github.io/blog/2013/07/10/decorate-octopress/</p>

<p>http://812lcl.com/blog/2013/10/26/octopressce-bian-lan-ji-ping-lun-xi-tong-ding-zhi/</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress使用中经验总结]]></title>
    <link href="http://pangyi.github.io/blog/20150125/octopressshi-yong-zhong-jing-yan-zong-jie/"/>
    <updated>2015-01-25T15:59:17+08:00</updated>
    <id>http://pangyi.github.io/blog/20150125/octopressshi-yong-zhong-jing-yan-zong-jie</id>
    <content type="html"><![CDATA[<!-- more -->

<ul id="markdown-toc">
  <li><a href="#section">找到最新的更新</a></li>
  <li><a href="#rake-generate">安装了一些插件后在rake generate时出现的一些莫名其妙</a></li>
  <li><a href="#section-1">首页显示摘要</a></li>
</ul>

<h2 id="section">找到最新的更新</h2>

<p>有时在网上找到的资料，因为时间的关系，或由于一些笔误，总是配置不对，又无法找到更新的说明。</p>

<p>由于octopress的博客很多是搭建在github上的，如果文档作者的博客仍使用octopress，那么他十有八九会在github上建有自己的博客，同时，很多人会用github管理自己的octopress配置，这时，就可以利用这一点获取更新后的配置。</p>

<p>例如《为octopress每篇文章添加一个文章信息》的作者的博客地址是http://codemacro.com/ 猜测他（她）在github上的仓库名应与codemacro有关。那么到github.com上搜索，找到两个仓库，一个为kevinlynx/codemacro-source，说明为source code of codemacro，另一个为kevinlynx/codemacro，说明为my personal blog 。基本可以知道前一个是保存配置的。进入仓库，找到https://github.com/kevinlynx/codemacro-source/blob/master/plugins/post_footer_filter.rb ，就找到了插入原文链接的插件的最新更新。</p>

<h2 id="rake-generate">安装了一些插件后在rake generate时出现的一些莫名其妙</h2>

<p>新版本的rake generate是执行的system “jekyll build”。这个操作会执行plugins目录下的所有ruby文件。所以（似乎不应该这么做呢）有时会有一些莫名其妙的事情发生。</p>

<p>处理方法，一种是不理。如果不理不行，或者实在太烦，可以把ruby插件换个目录，不过这样需要自己修改很多东西。</p>

<h2 id="section-1">首页显示摘要</h2>

<p>默认情况下在首页每篇博文会显示全文。如果文章比较长，那么全部显示就会让首页也比较长，如果要是多来几个比较长的就没法看了。</p>

<p>octopress的解决方式是加一行&lt;!– more –&gt;，在此之前的内容就会成为在首页显示的摘要内容，在点击“read on”按钮或标题后进入博客页面再显示完整内容。</p>

<p>“&lt;!– more –&gt;”只是一个摘要标识符，可以在_config.yml中通过excerpt_separator参数指定。由于使用了HTML的注释的写法，在博客正文中不会出现摘要标识符，标识符前的内容会在博客正文中显示。</p>

]]></content>
  </entry>
  
</feed>
